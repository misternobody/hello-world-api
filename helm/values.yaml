fullnameOverride: "api"

deployment:
  enabled: true
  strategy:
    type: RollingUpdate
  reloadOnChange: true
  replicas: 2
  env:
  - name: DATABASE_PASSWORD
    valueFrom:
      secretKeyRef:
        name: helm-api-database
        key: password
  - name: DATABASE_USERNAME
    valueFrom:
      secretKeyRef:
        name: helm-api-database
        key: username
  - name: DATABASE_HOST
    value: rds-instance-dns

  revisionHistoryLimit: 2

  image: 
    repository: DOCKER_REPO
    tag: '0.0.1'
    pullPolicy: IfNotPresent

  startupProbe:
    enabled: true
    httpGet:
      path: /health
      port: 5000

  readinessProbe:
    enabled: true
    httpGet:
      path: /health
      port: 5000

  livenessProbe:
    enabled: true
    httpGet:
      path: /health
      port: 5000

  resources:
    limits:
      memory: 256Mi
      cpu: 500m
    requests:
      memory: 128Mi
      cpu: 10m

  containerSecurityContext:
    readOnlyRootFilesystem: true
    runAsNonRoot: true

  ports:
  - containerPort: 5000
    name: http
    protocol: TCP

service:
  enabled: true
  ports:
    - port: 5000
      name: http
      protocol: TCP
      targetPort: 5000
  type: ClusterIP

ingress:
  enabled: true
  servicePort: http
  pathType: ImplementationSpecific
  hosts:
    - host: api.example.com
      paths: 
      - path: /*
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: "external"
    alb.ingress.kubernetes.io/certificate-arn: AWS_ACM_ARN
    alb.ingress.kubernetes.io/group.name: external-alb
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/security-groups: AWS_ALB_SECURITY_GROUP

configMap:
  enabled: false

secret:
  enabled: true
  files:
    database:
      encodedData:
        password: encodedstringpassword==
        usernmae: encodedstringusername==

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target: 
         type: Utilization
         averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target: 
         type: Utilization
         averageUtilization: 80

pdb:
  enabled: true
  maxUnavailable: 1

persistence:
  enabled: false
